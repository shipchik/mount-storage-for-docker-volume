services:

  elasticsearch1:
    image: docker.io/library/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch1
    hostname: elasticsearch1
    restart: unless-stopped
    volumes:
      - type: volume
        source: es1_data
        target: /usr/share/elasticsearch/data
      - type: bind
        source: ./shared_folder
        target: /shared_folder
    ports: 
      - "9200:9200"
    environment:
      - "node.name=elasticsearch1"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=elasticsearch2,elasticsearch3"
      - "cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3"
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m -Des.index.number_of_replicas=0 -Des.enforce.bootstrap.checks=true"
      - "xpack.security.enabled=false"
      - "xpack.security.http.ssl.enabled=false"
      - "xpack.security.transport.ssl.enabled=false"
      - "xpack.ml.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.watcher.enabled=false"
      - "path.repo=/shared_folder"
      - "ingest.geoip.downloader.enabled=false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 30
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 5000m 

  elasticsearch2:
    image: docker.io/library/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch2
    hostname: elasticsearch2
    restart: unless-stopped
    volumes:
      - type: volume
        source: es2_data
        target: /usr/share/elasticsearch/data
      - type: bind
        source: ./shared_folder
        target: /shared_folder
    ports: 
      - "9201:9200"
    environment:
      - "node.name=elasticsearch2"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=elasticsearch1,elasticsearch3"
      - "cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3"
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m -Des.index.number_of_replicas=0 -Des.enforce.bootstrap.checks=true"
      - "xpack.security.enabled=false"
      - "xpack.security.http.ssl.enabled=false"
      - "xpack.security.transport.ssl.enabled=false"
      - "xpack.ml.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.watcher.enabled=false"
      - "path.repo=/shared_folder"
      - "ingest.geoip.downloader.enabled=false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 30
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 5000m

  elasticsearch3:
    image: docker.io/library/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch3
    hostname: elasticsearch3
    restart: unless-stopped
    volumes:
      - type: volume
        source: es3_data
        target: /usr/share/elasticsearch/data
      - type: bind
        source: ./shared_folder
        target: /shared_folder
    ports: 
      - "9202:9200"
    environment:
      - "node.name=elasticsearch3"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-cluster"
      - "discovery.seed_hosts=elasticsearch2,elasticsearch3"
      - "cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3"
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m -Des.index.number_of_replicas=0 -Des.enforce.bootstrap.checks=true"
      - "xpack.security.enabled=false"
      - "xpack.security.http.ssl.enabled=false"
      - "xpack.security.transport.ssl.enabled=false"
      - "xpack.ml.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.watcher.enabled=false"
      - "path.repo=/shared_folder"
      - "ingest.geoip.downloader.enabled=false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 30
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 5000m

  kibana:
    image: docker.io/library/kibana:${STACK_VERSION}
    container_name: kibana
    restart: unless-stopped
    environment:
      - 'ELASTICSEARCH_HOSTS=["http://elasticsearch1:9200","http://elasticsearch2:9200","http://elasticsearch3:9200"]'
      - "SERVER_NAME=localhost"
      - "SERVER_BASEPATH=/kibana"
      - "SERVER_PUBLICBASEURL=http://localhost:5601/kibana"
      - "XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=UEs2S28DisjIMEZglnjMUEs2S28DisjIMEZglnjM"
      - "XPACK.REPORTING.ENCRYPTIONKEY=UEs2S28DisjIMEZglnjMUEs2S28DisjIMEZglnjM"
      - "XPACK_SECURITY_ENCRYPTIONKEY=UEs2S28DisjIMEZglnjMUEs2S28DisjIMEZglnjM"
    ports:
      - "5601:5601"
    volumes:
    - type: volume
      source: kibana_config
      target: /usr/share/kibana/config

volumes:
  es1_data:
    driver_opts:
      type: volume
      device: /home/ubuntu/disk/es1_data
      o: bind
  es2_data:
    driver_opts:
      type: volume
      device: /home/ubuntu/disk/es2_data
      o: bind
  es3_data:
    driver_opts:
      type: volume
      device: /home/ubuntu/disk/es3_data
      o: bind
  kibana_config:
    driver_opts:
      type: volume
      device: /home/ubuntu/disk/kibana_conf
      o: bind
